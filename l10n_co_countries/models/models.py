# -*- coding: utf-8 -*-

from odoo import models, api
import logging

_logger = logging.getLogger(__name__)

countries = {
    "CO": "169",
    "US": "249",
    "DE": "023",
    "FR": "275",
    "BE": "087",
    "NL": "573",
    "ES": "245",
    "CH": "767",
    "AT": "072",
    "CA": "149",
    "AF": "013",
    "AL": "017",
    "DZ": "059",
    "AS": "690",
    "AD": "037",
    "AO": "040",
    "AI": "041",
    "AG": "043",
    "AR": "063",
    "AM": "026",
    "AW": "027",
    "AU": "069",
    "AZ": "074",
    "BS": "077",
    "BH": "080",
    "BD": "081",
    "BB": "083",
    "BY": "091",
    "BZ": "088",
    "BJ": "229",
    "BM": "090",
    "BT": "119",
    "BO": "097",
    "BA": "029",
    "BW": "101",
    "BR": "105",
    "IO": "787",
    "BN": "108",
    "BG": "111",
    "BF": "031",
    "BI": "115",
    "KH": "141",
    "CM": "145",
    "CV": "127",
    "KY": "137",
    "CF": "640",
    "TD": "203",
    "CL": "211",
    "CN": "215",
    "CX": "511",
    "CC": "165",
    "KM": "173",
    "CG": "177",
    "CD": "177",
    "CK": "183",
    "CR": "196",
    "CI": "193",
    "HR": "198",
    "CU": "199",
    "CY": "221",
    "CZ": "644",
    "DK": "232",
    "DJ": "783",
    "DM": "235",
    "DO": "647",
    "EC": "239",
    "EG": "240",
    "SV": "242",
    "GQ": "331",
    "ER": "243",
    "EE": "251",
    "ET": "253",
    "FO": "259",
    "FJ": "870",
    "FI": "271",
    "GF": "325",
    "PF": "599",
    "GA": "281",
    "GM": "285",
    "GE": "287",
    "GH": "289",
    "GI": "293",
    "GR": "301",
    "GL": "305",
    "GD": "297",
    "GP": "309",
    "GU": "313",
    "GT": "317",
    "GN": "329",
    "GW": "334",
    "GY": "337",
    "HT": "341",
    "VA": "159",
    "HN": "345",
    "HK": "351",
    "HU": "355",
    "IS": "379",
    "IN": "361",
    "ID": "365",
    "IR": "372",
    "IQ": "369",
    "IE": "375",
    "IL": "383",
    "IT": "386",
    "JM": "391",
    "JP": "399",
    "JO": "403",
    "KZ": "406",
    "KE": "410",
    "KI": "411",
    "KP": "187",
    "KR": "190",
    "KW": "413",
    "KG": "412",
    "LA": "420",
    "LV": "429",
    "LB": "431",
    "LS": "426",
    "LR": "434",
    "LY": "438",
    "LI": "440",
    "LT": "443",
    "LU": "445",
    "MO": "447",
    "MK": "448",
    "MG": "450",
    "MW": "458",
    "MY": "455",
    "MV": "461",
    "ML": "464",
    "MT": "467",
    "MH": "472",
    "MQ": "477",
    "MR": "488",
    "MU": "485",
    "MX": "493",
    "FM": "494",
    "MD": "496",
    "MC": "498",
    "MN": "497",
    "MS": "501",
    "MA": "474",
    "MZ": "505",
    "MM": "093",
    "NA": "507",
    "NR": "508",
    "NP": "517",
    "AN": "047",
    "NC": "542",
    "NZ": "548",
    "NI": "521",
    "NE": "525",
    "NG": "528",
    "NU": "531",
    "NF": "535",
    "MP": "469",
    "NO": "538",
    "OM": "556",
    "PK": "576",
    "PW": "578",
    "PS": "897",
    "PA": "580",
    "PG": "545",
    "PY": "586",
    "PE": "589",
    "PH": "267",
    "PN": "593",
    "PL": "603",
    "PT": "607",
    "PR": "611",
    "QA": "618",
    "RE": "660",
    "RO": "670",
    "RU": "676",
    "RW": "675",
    "SH": "710",
    "KN": "695",
    "LC": "715",
    "PM": "700",
    "WS": "687",
    "SM": "697",
    "ST": "720",
    "SA": "053",
    "SN": "728",
    "SC": "731",
    "SL": "735",
    "SG": "741",
    "SK": "246",
    "SI": "247",
    "SB": "677",
    "SO": "748",
    "ZA": "756",
    "LK": "750",
    "SD": "759",
    "SR": "770",
    "SZ": "773",
    "SE": "764",
    "SY": "744",
    "TW": "218",
    "TJ": "774",
    "TZ": "780",
    "TH": "776",
    "TL": "788",
    "TG": "800",
    "TK": "805",
    "TO": "810",
    "TT": "815",
    "TN": "820",
    "TR": "827",
    "TM": "825",
    "TC": "823",
    "TV": "828",
    "UG": "833",
    "UA": "830",
    "AE": "244",
    "GB": "628",
    "UM": "566",
    "UY": "845",
    "UZ": "847",
    "VU": "551",
    "VE": "850",
    "VN": "855",
    "VG": "863",
    "VI": "866",
    "WF": "875",
    "EH": "685",
    "YE": "880",
    "ZM": "890",
    "ZW": "665",
}


class Country(models.Model):
    _inherit = 'res.country'

    @api.model
    def update_dane_code(self):
        for k, v in countries.iteritems():
            c = self.env['res.country'].search([('code', '=', k)])
            if c:
                c.apdnc_dane_code = v
                _logger.info('Updated country with code ' + k + ' DANE code to ' + v)
            else:
                _logger.info('Country with code ' + k + ' not found.')
